swagger: '2.0'
info:
  title: SQL - Flask Restful API
  version: 1.0
schemes:
  - http
basePath: /api/v1

paths:
  /students/:
    get:
      summary: Get a paginated List of students
      tags:
        - Students
      parameters:
        - name: page
          in: query
          type: integer
          minimum: 1
          description: Page number
        - name: per_page
          in: query
          type: integer
          minimum: 10
          description: Items per page
        - name: sort
          in: query
          type: string
          enum: [asc, desc, age, group]
          description: Sorting order (asc, desc, age or group)
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              students:
                type: array
                items:
                  $ref: '#/definitions/Student'
              total_pages:
                type: integer
              current_page:
                type: integer
              per_page:
                type: integer
              total_items:
                type: integer
      operationId: getAllStudents

    post:
      summary: Create a new student
      tags:
        - Students
      parameters:
        - name: student_data
          in: body
          schema:
            $ref: '#/definitions/CreateStudentRequestBody'
      responses:
        '201':
          description: Student created successfully
        '400':
          description: Invalid input
      operationId: postNewStudent

  /students/{id}:
    get:
      summary: Get student by ID
      tags:
        - Students
      parameters:
        - name: id
          in: path
          type: integer
          minimum: 1
          description: Student ID
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Student'
        '404':
          description: Student not found
      operationId: getStudentByID

    delete:
      summary: Delete student by ID
      tags:
        - Students
      parameters:
        - name: id
          in: path
          type: integer
          minimum: 1
          description: Student ID
      responses:
        '200':
          description: Student deleted successfully
        '404':
          description: Student not found
      operationId: deleteStudentByID

  /groups/students:
    get:
      summary: Get a list of all groups and their student counts
      tags:
        - Groups
      responses:
        '200':
          description: Successful response
          schema:
            type: array
            items:
              $ref: '#/definitions/GroupWithStudentCount'
      operationId: getAllGroups

  /groups/{num}/students:
    get:
      summary: Get a list of groups with no more than a given number of students
      tags:
        - Groups
      parameters:
        - name: num
          in: path
          required: true
          type: integer
          minimum: 10
          maximum: 30
          description: Maximum number of students in a group
      responses:
        '200':
          description: Successful response
          schema:
            type: array
            items:
              $ref: '#/definitions/GroupWithStudentCount'
        '400':
          description: Invalid input
      operationId: getGroupsWithMaxStudents

  /courses/:
    get:
      summary: Get a list of all courses
      tags:
        - Courses
      responses:
        '200':
          description: Successful response
          schema:
            type: array
            items:
              $ref: '#/definitions/Course'
      operationId: getAllCourses

  /courses/{id}:
    put:
      summary: Update a course by ID
      tags:
        - Courses
      parameters:
        - name: id
          in: path
          type: integer
          format: int64
          required: true
          description: Course ID to update
        - in: body
          name: course
          required: true
          schema:
            $ref: '#/definitions/CourseUpdateInput'
      responses:
        '201':
          description: Course updated successfully
        '400':
          description: Invalid data provided
        '404':
          description: Course with specified ID not found
      consumes:
        - application/json
      produces:
        - application/json
      operationId: updateCourseByID

  /courses/{course}/students/:
    get:
      summary: Get a list of students in a specific course
      tags:
        - Student-Course
      parameters:
        - name: course
          in: path
          type: string
          required: true
          description: Course name to retrieve students from
      responses:
        '200':
          description: Successful response
          schema:
            type: array
            items:
              $ref: '#/definitions/StudentInCourse'
      operationId: getStudentsInCourse

  /students/{id}/courses/:
    get:
      summary: Get a list of courses for a specific student
      tags:
        - Student-Course
      parameters:
        - name: id
          in: path
          type: integer
          format: int64
          required: true
          description: Student ID to retrieve courses for
      responses:
        '200':
          description: Successful response
          schema:
            type: array
            items:
              $ref: '#/definitions/CourseForStudent'
      operationId: getCoursesForStudent

  /students/{id_student}/courses/{id_course}:
    post:
      summary: Add a student to a course
      tags:
        - Student-Course
      parameters:
        - name: id_student
          in: path
          type: integer
          format: int64
          required: true
          description: Student ID to associate with the course
        - name: id_course
          in: path
          type: integer
          format: int64
          required: true
          description: Course ID to associate the student with
      responses:
        '201':
          description: Student added to the course successfully
        '400':
          description: Student-course association already exists or invalid data provided
        '404':
          description: Student or course not found
      operationId: addStudentToCourse

    delete:
      summary: Remove a student from a course
      tags:
        - Student-Course
      parameters:
        - name: id_student
          in: path
          type: integer
          format: int64
          required: true
          description: Student ID to remove from the course
        - name: id_course
          in: path
          type: integer
          format: int64
          required: true
          description: Course ID to remove the student from
      responses:
        '200':
          description: Student removed from the course successfully
        '404':
          description: Student-course association not found
      operationId: removeStudentFromCourse


definitions:
  Student:
    type: object
    properties:
      id:
        type: integer
      first_name:
        type: string
      last_name:
        type: string
      age:
        type: integer
      group_id:
        type: integer

  CreateStudentRequestBody:
    type: object
    properties:
      first_name:
        type: string
      last_name:
        type: string
      age:
        type: integer
      group_id:
        type: integer

  GroupWithStudentCount:
    type: object
    properties:
      group_name:
        type: string
        description: Group name
      student_count:
        type: integer
        description: Number of students in the group

  Course:
    type: object
    properties:
      id:
        type: integer
        description: Course ID
      course:
        type: string
        description: Name of the course
      description:
        type: string
        description: Description of the course

  CourseUpdateInput:
    type: object
    properties:
      id_course:
        type: integer
        description: Course ID
      course:
        type: string
        description: Name of the course
      description:
        type: string
        description: Description of the course

  StudentInCourse:
    type: object
    properties:
      course:
        type: string
        description: Name of the course
      first_name:
        type: string
        description: First name of the student
      last_name:
        type: string
        description: Last name of the student

  CourseForStudent:
    type: object
    properties:
      id:
        type: integer
        description: Student ID
      first_name:
        type: string
        description: First name of the student
      last_name:
        type: string
        description: Last name of the student
      course:
        type: string
        description: Name of the course
